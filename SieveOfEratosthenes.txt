//all primes smaller than or equal to n using Sieve of Eratosthenes
//Complexity O[log(log(n))] for 1 and for range n = n*log(log(n))
#include <bits/stdc++.h>
using namespace std;
void SieveOfEratosthenes(int n){
	bool prime[n + 1];
	memset(prime, true, sizeof(prime));

	for (int p = 2; p * p <= n; p++){
		if (prime[p] == true)		{
			for (int i = p * p; i <= n; i += p)
				prime[i] = false;
		}
	}
	// Print all prime numbers
	for (int p = 2; p <= n; p++)
		if (prime[p])
			cout << p << " ";
    cout<<"\n\n";
}


int main(){
	int n = 51;
	cout << " prime numbers smaller than or equal to " << n << "\n";
	SieveOfEratosthenes(n);
	return 0;
}
